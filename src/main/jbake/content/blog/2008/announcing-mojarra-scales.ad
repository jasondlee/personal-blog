title=Announcing Mojarra Scales
date=2008-01-02
tags=Java, JavaServer Faces, JSFTemplating, Scales
type=post
status=published
~~~~~~
= Announcing Mojarra Scales
Jason Lee
2008-01-02

Some of you may be wondering what the status is on the RI Sandbox.  With the link:/2007/12/05/announcing-project-mojarra/[announcement] of https://mojarra.dev.java.net/[Project Mojarra], we can finally take the wraps off of https://scales.dev.java.net/[Mojarra Scales], the promotion of the RI/Mojarra Sandbox to its own project.  There are a few differences between the Sandbox of Scales to note, such as package names, namespace, etc.  There has also been a fair amount of refactoring inside the library to simplify the components somewhat (more on that later).  To migrate from the RI Sandbox to Mojarra Scales, you will need to do the following:
<!-- Read More -->

# Remove jsf-ri-sandbox-0.9.jar
# Add https://scales.dev.java.net/files/documents/7591/79743/mojarra-scales.jar[mojarra-scales.jar]. (I'm working on getting this added to the java.net maven repository as well).
# Add the (new) JSFTemplating dependencies from https://maven-repository.dev.java.net/nonav/repository/com.sun.jsftemplating/jars/jsftemplating-1.2-SNAPSHOT.jar[here] and https://maven-repository.dev.java.net/nonav/repository/com.sun.jsftemplating/jars/jsftemplating-dynafaces-0.1-1.2-SNAPSHOT.jar[here].
# Change your references to the RI Sandbox URL.
  ## JSP: `<%@ taglib uri="http://java.sun.com/mojarra/scales" prefix="sc" %>`
  ## Facelets: xmlns:sc="http://java.sun.com/mojarra/scales"
# Add the static resource PhaseListener:
[source,xml,linenums]
-----
<lifecycle>
    <phase-listener>
        com.sun.mojarra.scales.util.StaticResourcePhaseListener
    </phase-listener>
</lifecycle>
-----

That should be all there is too it (though if I've missed a step, please let me know).
