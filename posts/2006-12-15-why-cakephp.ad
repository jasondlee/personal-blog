---
title: 'Why CakePHP?'
author: 'Jason Lee'
layout: blog-post
date: 2006-12-15
tags: [ PHP ]
---
A reader recently asked me why I chose http://www.cakephp.org[CakePHP] over other frameworks, such as http://www.pradosoft.com/[Prado], so I thought I'd answer that question briefly.
pass::[more]

What drew me to CakePHP was the "simplicity."  I say that cautiously, as there is a bit of a curve, but there's very little configuration (i.e., no xml).  At the time, all the config files in Prado kinda scared me off.  I liked how CakePHP automatically picked up my controllers, models, etc based on the file/class names and locations.  I liked the ActiveRecord approach to the models.  In fact, it was the ORM part of CakePHP that really sold me, as I was looking for a good Hibernate-esque tool for PHP.  When I stumbled across CakePHP, I found that and a really good MVC framework, so I bit.

At any rate, as time passed, I began looking at Prado again, as I read somewhere a description that made it sound as if Prado were fairly similar to https://javaserverfaces.dev.java.net/[JSF] in terms of development (page templates, application lifecycles, etc), and I decided that I deal with a bit of XML on the Java side, so why not on the PHP side.

I started writing a small budget app for my wife and I (why we don't just download one I can't really say : ) in Prado and was enjoying, but the documentation was pretty poor (still is) for the latest/beta version.  That's what I get for using a beta, but it had features the stable version didn't, and I was trying to avoid having to relearn the framework.  I was also unable to get much help on the mailing lists, so, in the end, it was taking too long so I started over in CakePHP, with which I'm very comfortable, and got it done in no time.

I like Prado and would like to play with it some more as time permits, but the docs are going to have to get better.  The API docs were great, but the "here's how you actually use this stuff" type of documentation was not very helpful at all. :|
